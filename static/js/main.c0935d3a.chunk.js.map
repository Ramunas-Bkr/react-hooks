{"version":3,"sources":["components/Navbar.js","context/alert/alertContext.js","context/github/githubContext.js","components/Search.js","components/Card.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","exact","to","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","gitHub","type","placeholder","onKeyPress","event","key","clearUsers","trim","hide","search","show","onChange","target","Card","user","src","avatar_url","alt","login","Home","loading","users","map","id","About","Repos","repos","Fragment","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","blog","bio","followers","following","public_repos","public_gits","style","width","Alert","text","aria-label","onClick","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","CLIENT_ID","process","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","withCreds","url","GithubState","a","setLoading","Axios","get","response","data","items","App","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c0935d3a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\r\n            <div className=\"navbar-brand\">\r\n                GitHub search\r\n            </div>\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink exact to=\"/\" className=\"nav-link\">Main</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink to=\"/about\" className=\"nav-link\">About</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { createContext } from \"react\";\r\n\r\n\r\nexport const AlertContext = createContext()","import { createContext } from \"react\";\r\n\r\n\r\nexport const GithubContext = createContext()","import React, { useContext, useState } from 'react'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\nimport { GithubContext } from '../context/github/githubContext'\r\n\r\nexport const Search = () => {\r\n    const [value, setValue] = useState('')\r\n    const alert = useContext(AlertContext)\r\n    const gitHub = useContext(GithubContext)\r\n\r\n    const onSubmit = event => {\r\n        if (event.key !== 'Enter') {\r\n            return null\r\n        }\r\n\r\n        gitHub.clearUsers()\r\n\r\n        if (value.trim()) {\r\n            alert.hide()\r\n            gitHub.search(value.trim())\r\n            \r\n        } else {\r\n            alert.show('Enter user data')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            <input \r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                onKeyPress={onSubmit}\r\n                value={value}\r\n                onChange={event => setValue(event.target.value)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Card = ({user}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={user.avatar_url} alt={user.login} className=\"card-img-top\" />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{user.login}</h5>\r\n                <Link to={`/profile/${user.login}`} className=\"btn btn-primary\">Open</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Search } from '../components/Search'\r\nimport { Card } from '../components/Card'\r\nimport { GithubContext } from '../context/github/githubContext'\r\n\r\nexport const Home = () => {\r\n\r\n    const { loading, users } = useContext(GithubContext)\r\n\r\n    return (\r\n        <>\r\n            <Search />\r\n            <div className=\"row\">\r\n                {loading\r\n                    ? <p className=\"text-center\">...Loading...</p>\r\n                    : users.map(user => (\r\n                        <div className=\"col-sm-4 mb-4\" key={user.id}>\r\n                            <Card user={user}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">Fluid jumbotron</h1>\r\n                <p className=\"lead\">This is a modified jumbotron that occupies the entire horizontal space of its parent.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Repos = ({repos}) => {\r\n    return (\r\n        <React.Fragment>\r\n            {repos.map(repo => (\r\n                <div className=\"card mb-3\" key={repo.id}>\r\n                    <div className=\"card-body\">\r\n                        <h5>\r\n                            <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{repo.name}</a>\r\n                        </h5>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, Fragment } from 'react'\r\nimport { GithubContext } from '../context/github/githubContext'\r\nimport { Link } from 'react-router-dom'\r\nimport { Repos } from '../components/Repos'\r\n\r\nexport const Profile = ({ match }) => {\r\n\r\n    const { getUser, getRepos, loading, user, repos } = useContext(GithubContext)\r\n    const urlName = match.params.name\r\n\r\n    useEffect(() => {\r\n        getUser(urlName)\r\n        getRepos(urlName)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return <p className=\"text-center\">...Loading...</p>\r\n    }\r\n\r\n    const { name, company, avatar_url, location, blog, bio, login, html_url, followers, following, public_repos, public_gits } = user\r\n\r\n    return (\r\n        <Fragment>\r\n            <Link to=\"/\" className=\"btn btn-link\">Main page</Link>\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-3 text-center\">\r\n                            <img \r\n                                src={avatar_url} \r\n                                alt={name} \r\n                                style={{width: '150px'}}    \r\n                                />\r\n                            <h1>{name}</h1>\r\n                            {location && <p>Location: {location}</p>}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {bio && <Fragment>\r\n                                <h3>Bio</h3>\r\n                                <p>{bio}</p>\r\n                            </Fragment>\r\n                            }\r\n                            <a \r\n                                href={html_url} \r\n                                rel=\"noopener noreferrer\" \r\n                                target=\"_blank\" \r\n                                className=\"btn btn-dark\"\r\n                            >Open profile</a>\r\n                            <ul>\r\n                                {login && <li><strong>Username: </strong>{login}</li>}\r\n                                {company && <li><strong>Company: </strong>{company}</li>}\r\n                                {blog && <li><strong>Website: </strong>{blog}</li>}\r\n                            </ul>\r\n                            <div className=\"badge badge-primary\">Followers: {followers}</div>\r\n                            <div className=\"badge badge-success\">Following: {following}</div>\r\n                            <div className=\"badge badge-info\">Repositories: {public_repos}</div>\r\n                            <div className=\"badge badge-dark\">Gits: {public_gits}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Repos repos={repos} />\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\n\r\nexport const Alert = () => {\r\n\r\n    const {alert, hide} = useContext(AlertContext)\r\n\r\n    if(!alert) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}>\r\n                {alert.text}\r\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { SHOW_ALERT, HIDE_ALERT } from \"../types\";\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT]: (state, action) => action.payload,\r\n    [HIDE_ALERT]: () => null,\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const alertReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler(state, action)\r\n}","export const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\nexport const CLEAR_USERS = 'CLEAR_USERS'\r\nexport const GET_REPOS = 'GET_REPOS'\r\nexport const GET_USER = 'GET_USER'\r\nexport const SEARCH_USERS = 'SEARCH_USERS'\r\nexport const SET_LOADING = 'SET_LOADING'\r\n","import React, { useReducer } from 'react'\r\nimport { AlertContext } from './alertContext'\r\nimport { alertReducer } from './alertReducer'\r\nimport { HIDE_ALERT, SHOW_ALERT } from '../types'\r\n\r\nexport const AlertState = ({ children }) => {\r\n\r\n    const [state, dispatch] = useReducer(alertReducer, null)\r\n\r\n    const hide = () => dispatch({ type: HIDE_ALERT })\r\n\r\n    const show = (text, type = 'secondary') => {\r\n        dispatch({\r\n            type: SHOW_ALERT,\r\n            payload: { type, text }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <AlertContext.Provider value={{ hide, show, alert: state }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}\r\n","import { SEARCH_USERS, GET_REPOS, GET_USER, SET_LOADING, CLEAR_USERS } from \"../types\"\r\n\r\nconst handlers = {\r\n    [SEARCH_USERS]: (state, {payload}) => ({...state, users: payload, loading: false}),\r\n    [GET_REPOS]: (state, {payload}) => ({...state, repos: payload, loading: false}),\r\n    [GET_USER]: (state, {payload}) => ({...state, user: payload, loading: false}),\r\n    [SET_LOADING]: state => ({...state, loading: true}),\r\n    [CLEAR_USERS]: state => ({...state, users: []}),\r\n    DEFAULT: state => state\r\n}\r\n\r\n\r\nexport const githubReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler(state, action)\r\n}","import React, { useReducer } from 'react'\r\nimport { GithubContext } from './githubContext'\r\nimport { githubReducer } from './githubReducer'\r\nimport { SEARCH_USERS, GET_USER, GET_REPOS, CLEAR_USERS, SET_LOADING } from '../types'\r\nimport Axios from 'axios'\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\r\n\r\nconst withCreds = url => {\r\n    return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\r\n}\r\n\r\nexport const GithubState = ({ children }) => {\r\n\r\n    const initialState = {\r\n        user: {},\r\n        users: [],\r\n        loading: false,\r\n        repos: []\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(githubReducer, initialState)\r\n\r\n    const search = async value => {\r\n        setLoading()\r\n\r\n        const response = await Axios.get(\r\n            withCreds(`https://api.github.com/search/users?q=${value}&`))\r\n        dispatch({\r\n            type: SEARCH_USERS,\r\n            payload: response.data.items\r\n        })\r\n    }\r\n\r\n    const getUser = async name => {\r\n        setLoading()\r\n\r\n        const response = await Axios.get(\r\n            withCreds(`https://api.github.com/users/${name}?`))\r\n        dispatch({\r\n            type: GET_USER,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    const getRepos = async name => {\r\n        setLoading()\r\n        const response = await Axios.get(\r\n        withCreds(`https://api.github.com/users/${name}/repos?per_page=20&`))\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    const clearUsers = () => dispatch({ type: CLEAR_USERS })\r\n\r\n    const setLoading = () => dispatch({ type: SET_LOADING })\r\n\r\n    const { user, users, repos, loading } = state\r\n\r\n    return (\r\n        <GithubContext.Provider value={{\r\n            search, getUser, getRepos, clearUsers, setLoading,\r\n            user, users, repos, loading\r\n        }}>\r\n            {children}\r\n        </GithubContext.Provider>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Navbar from './components/Navbar';\r\nimport { Home } from './pages/Home';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { About } from './pages/About';\r\nimport { Profile } from './pages/Profile';\r\nimport { Alert } from './components/Alert';\r\nimport { AlertState } from './context/alert/AlertState';\r\nimport { GithubState } from './context/github/GithubState';\r\n\r\nfunction App() {\r\n  return (\r\n    <GithubState>\r\n      <AlertState>\r\n        <BrowserRouter>\r\n          <Navbar />\r\n          <div className=\"container pt-4\">\r\n            <Alert alert={{ text: 'Alert test text' }} />\r\n            <Switch>\r\n              <Route path=\"/\" exact component={Home} />\r\n              <Route path=\"/about\" component={About} />\r\n              <Route path=\"/profile/:name\" component={Profile} />\r\n            </Switch>\r\n          </div>\r\n        </BrowserRouter>\r\n      </AlertState>\r\n    </GithubState>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}